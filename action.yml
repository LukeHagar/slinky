name: "Slinky Link Checker"
description: "Slink through your repository looking for dead links"
author: "LukeHagar"
branding:
  icon: "link"
  color: "blue"

inputs:
  targets:
    description: "Comma-separated paths and patterns to scan. Can be directories, files, or glob patterns. Ex: docs/,api-specs/**/*.yaml,README.md"
    required: false
    default: "**/*"
  concurrency:
    description: "Maximum concurrent requests"
    required: false
  timeout:
    description: "HTTP timeout seconds"
    required: false
  respect_gitignore:
    description: "Respect .gitignore while scanning"
    required: false
  json_out:
    description: "Optional path to write JSON results"
    required: false
  md_out:
    description: "Optional path to write Markdown report for PR comment"
    required: false
  repo_blob_base:
    description: "Override GitHub blob base URL (https://github.com/<owner>/<repo>/blob/<sha>)"
    required: false
  fail_on_failures:
    description: "Fail the job if any links fail"
    required: false
  comment_pr:
    description: "If running on a PR, post a comment with the report"
    required: false
  step_summary:
    description: "Append the report to the GitHub Step Summary"
    required: false

runs:
  using: "docker"
  image: "docker://ghcr.io/lukehagar/slinky:v1"
  args: []
  env:
    INPUT_TARGETS: ${{ inputs.targets }}
    INPUT_CONCURRENCY: ${{ inputs.concurrency }}
    INPUT_TIMEOUT: ${{ inputs.timeout }}
    INPUT_RESPECT_GITIGNORE: ${{ inputs.respect_gitignore }}
    INPUT_JSON_OUT: ${{ inputs.json_out }}
    INPUT_MD_OUT: ${{ inputs.md_out }}
    INPUT_REPO_BLOB_BASE: ${{ inputs.repo_blob_base }}
    INPUT_FAIL_ON_FAILURES: ${{ inputs.fail_on_failures }}
    INPUT_COMMENT_PR: ${{ inputs.comment_pr }}
    INPUT_STEP_SUMMARY: ${{ inputs.step_summary }}

outputs:
  json_path:
    description: "Path to JSON results file"
  md_path:
    description: "Path to Markdown report file"


